[tool.ruff]
extend-exclude = [
    "bin",
    "fact_extractor/plugins/unpacking/*/test/data/*",
]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = [
    "F",  # Pyflakes
    "E",  # pycodestyle Error
    "W",  # pycodestyle Warning
    "C90",  # mccabe
    "I",  # isort
    "N",  # pep8-naming
    "UP",  # pyupgrade
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "C4",  # flake8-comprehensions
    "EXE",  # flake8-executable
    "FA",  # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PT",  # flake8-pytest-style
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "PL",  # Pylint
    "PERF",  # Perflint
    "RUF",  # Ruff-specific rules
]
ignore = [
    "A003",
    "PERF203",
    "PERF401",
    "RUF001",
    "RUF002",
    "RUF003",
    "RUF015",
    # pydantic only supports these from python>=3.9
    "UP006",
    "UP007",
    # rules may cause conflicts when used with the formatter
    "ISC001",
    "Q001",
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"test*.py" = ["ARG002", "PLR2004"]
"conftest.py" = ["ARG002"]

[tool.ruff.lint.isort]
known-first-party = ["config", "helperFunctions", "install", "plugins", "test", "unpacker", "version"]

[tool.ruff.lint.pylint]
max-args=7
max-public-methods = 40

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"
docstring-quotes = "double"

[tool.ruff.format]
quote-style = "single"
